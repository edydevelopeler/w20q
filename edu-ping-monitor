#!/bin/sh

# #############################################################################
# Skrip Pemantau Koneksi dengan Aksi Darurat Langsung
# VERSI 3.3 - Perbaikan Notifikasi Stuck dengan Subshell
# #############################################################################

# --- LOKASI FILE KONFIGURASI ---
# Perlu membaca file ini untuk mendapatkan token & chat ID Telegram
CONFIG_FILE="/etc/config/edu_config.conf"

# --- KONFIGURASI PEMANTAUAN ---
VERIFY_URL="http://detectportal.firefox.com/success.txt"
EXPECTED_CONTENT="success"
FAIL_THRESHOLD=2

# --- FUNGSI UNTUK MENGIRIM NOTIFIKASI TELEGRAM ---
# Fungsi ini disalin ke sini agar skrip ini mandiri
send_telegram_notification() {
    # Muat konfigurasi dulu
    if [ -f "$CONFIG_FILE" ]; then
        . "$CONFIG_FILE"
    else
        echo "File konfigurasi tidak ditemukan, tidak bisa mengirim notifikasi."
        return
    fi
    
    MESSAGE="$1"
    if [ -z "$MESSAGE" ]; then return; fi
    URL="https://api.telegram.org/bot${BOT_TOKEN}/sendMessage"
    # Menggunakan timeout 10 detik agar tidak menunggu terlalu lama jika gagal
    curl -s --max-time 10 -X POST "$URL" -d chat_id="$CHAT_ID" --data-urlencode "text=$MESSAGE" -d parse_mode="Markdown" > /dev/null
}

# --- FUNGSI UTAMA ---
fail_count=0
echo "Memulai skrip pemantau koneksi (metode aksi langsung) pada $(date)"

# Loop selamanya
while true; do
    # Coba verifikasi koneksi
    if curl -s --max-time 5 "$VERIFY_URL" | grep -q "$EXPECTED_CONTENT"; then
        fail_count=0
        echo "[$(date +'%H:%M:%S')] Koneksi terverifikasi (konten cocok)."
    else
        fail_count=$((fail_count + 1))
        echo "[$(date +'%H:%M:%S')] VERIFIKASI KONEKSI GAGAL! (Percobaan ke-$fail_count dari $FAIL_THRESHOLD)"
    fi

    # Cek apakah sudah mencapai ambang batas kegagalan
    if [ "$fail_count" -ge "$FAIL_THRESHOLD" ]; then
        echo "[$(date +'%H:%M:%S')] AMBANG BATAS GAGAL TERCAPAI! Menjalankan pembelian paket darurat..."
        
        # --- EKSEKUSI PERINTAH ADB LANGSUNG ---
        adb shell am start -a android.intent.action.CALL -d "tel:*808*5*2*1*1%23" && \
        sleep 20 && \
        adb shell input keyevent 4 && \
        sleep 10 && \
        adb shell am start -a android.intent.action.CALL -d "tel:*808*4*1*1*1%23" && \
        sleep 15 && \
        adb shell input keyevent 4 && \
        sleep 3 && \
        adb shell cmd connectivity airplane-mode enable && \
        sleep 3 && \
        adb shell cmd connectivity airplane-mode disable

        echo "[$(date +'%H:%M:%S')] Eksekusi ADB selesai. Menjalankan notifikasi di latar belakang..."
        
        # --- PERBAIKAN DI SINI ---
        # Jalankan proses jeda dan notifikasi di subshell (di latar belakang)
        # Ini mencegah skrip utama menjadi stuck
        (
            # Jeda selama 2 menit untuk memberi waktu koneksi pulih sepenuhnya
            sleep 120
            
            # Kirim notifikasi SETELAH koneksi kemungkinan pulih
            send_telegram_notification "ðŸš¨ *Koneksi Terputus!*

Sistem mendeteksi koneksi gagal dan telah menjalankan pembelian darurat."
            
            sleep 2

            send_telegram_notification "âœ… *Pembelian Darurat Selesai*

Paket baru sudah aktif."
        ) &

        # Reset counter setelah eksekusi agar pemantauan bisa langsung lanjut
        fail_count=0
        echo "[$(date +'%H:%M:%S')] Pemantauan dilanjutkan."
    fi

    # Tunggu 15 detik sebelum melakukan pengecekan lagi
    sleep 15
done
