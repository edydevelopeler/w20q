#!/bin/sh

# URL file teks kecil untuk verifikasi koneksi internet yang sebenarnya.
# File ini hanya berisi kata "success".
VERIFY_URL="http://detectportal.firefox.com/success.txt"
EXPECTED_CONTENT="success"

# Berapa kali verifikasi harus gagal berturut-turut sebelum eksekusi
FAIL_THRESHOLD=2

# Inisialisasi counter kegagalan
fail_count=0

echo "Memulai skrip pemantau koneksi (metode verifikasi konten) pada $(date)"

# Loop selamanya
while true; do
    # Coba unduh konten dari URL dengan timeout 5 detik dan periksa isinya.
    # 'curl -s -m 5' akan mengunduh konten.
    # 'grep -q "$EXPECTED_CONTENT"' akan memeriksa apakah kata "success" ada.
    if curl -s --max-time 5 "$VERIFY_URL" | grep -q "$EXPECTED_CONTENT"; then
        # Jika berhasil, reset counter
        fail_count=0
        echo "[$(date +'%H:%M:%S')] Koneksi terverifikasi (konten cocok)."
    else
        # Jika gagal, tambahkan counter
        fail_count=$((fail_count + 1))
        echo "[$(date +'%H:%M:%S')] VERIFIKASI KONEKSI GAGAL! (Percobaan ke-$fail_count dari $FAIL_THRESHOLD)"
    fi

    # Cek apakah sudah mencapai ambang batas kegagalan
    if [ "$fail_count" -ge "$FAIL_THRESHOLD" ]; then
        echo "[$(date +'%H:%M:%S')] AMBANG BATAS GAGAL TERCAPAI! Menjalankan skrip edu --force..."
        
        # Jalankan skrip utama Anda dengan argumen --force
        /usr/bin/edu --force
        
        # Jeda selama 3 menit untuk memberi waktu koneksi pulih sepenuhnya
        echo "[$(date +'%H:%M:%S')] Eksekusi selesai. Menjeda pemantauan selama 3 menit untuk stabilisasi jaringan..."
        sleep 180
        
        # Reset counter setelah eksekusi
        fail_count=0
        echo "[$(date +'%H:%M:%S')] Pemantauan dilanjutkan."
    fi

    # Tunggu 20 detik sebelum melakukan pengecekan lagi
    sleep 20
done
